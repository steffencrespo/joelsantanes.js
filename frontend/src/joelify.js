const regexps = [

    // Locais e pa√≠ses
    [/\bar√°bia saudita\b/gi, "saudi ar√°bia"],
    [/\bbrasil\b/gi, "br√©ziu"],

    // Dire√ß√µes, posi√ß√µes e tempo
    [/\bprimeiro\b/gi, "faristi"],
    [/\bsegundo\b/gi, "segundi"],
    [/\btempo\b/gi, "t√°imi"],
    [/\besquerda\b/gi, "lefiti"],
    [/\bdireit(a|o|as|os)\b/gi, "raiti"],
    [/\bmeio\b/gi, "midiu"],
    [/\b(atr√°s|tras)\b/gi, "blihaindiu"],

    // Quantidade, ordem e refer√™ncia
    [/\btod(o|a|os|as)\b/gi, "√°u"],
    [/\bmais\b/gi, "m√≥ri"],
    [/\bmuito\b/gi, "v√©ri"],
    [/\boutro(s?)\b/gi, "√≥der$1"],

    // Pessoas e pronomes
    [/\beu\b/gi, "√°i"],
    [/\bvoc√™\b/gi, "i√∫"],
    [/\btu\b/gi, "i√∫"],
    [/\bn√≥s\b/gi, "u√≠"],
    [/\b(minha|meu|minhas|meus)\b/gi, "m√°i"],
    [/\b(s|t)(ua|eu)\b/gi, "i√≥"],

    // Verbos e a√ß√µes
    [/\btem\b/gi, "hevi"],
    [/\bjogou\b/gi, "prei"],
    [/\bjog(a|ador)\b/gi, "pleier"],
    [/\bfazer\b/gi, "m√™ki"],
    [/\bcontrol(a|ou)\b/gi, "contr√¥u"],
    [/\btroca\b/gi, "tchange"],
    [/\btroc(ar|o)\b/gi, "ch√¢nger"],
    [/\bgost(a|o)\b/gi, "l√°iqui"],
    [/\bquer(o)?\b/gi, "u√°nti"],
    [/\bviaj(a|o)(r|rem)?\b/gi, "tr√°viliu"],

    // Substantivos comuns
    [/\b(equipe|time)\b/gi, "equipi"],
    [/\bpartida\b/gi, "m√©t"],
    [/\bchurrasco\b/gi, "b√°rbiquiu"],
    [/\bgol\b/gi, "ixcoar"],
    [/\boportunidade\b/gi, "oportuniti"],
    [/\bexperiente\b/gi, "experient"],
    [/\bexperiencia\b/gi, "experienci"],
    [/\bexterior\b/gi, "extrandjeir"],
    [/\bdoce\b/gi, "su√≠ti"],
    [/\bcal√ßas\b/gi, "p√°nti"],
    [/\bcara\b/gi, "d√∫di"],

    // üí¨ Adjetivos positivos
    [/\bbom\b/gi, "v√©ri g√∫di"],
    [/\bbem\b/gi, "v√©ri g√∫di"],
    [/\bboa\b/gi, "v√©ri g√∫di"],
    [/\bbons\b/gi, "g√∫di"],
    [/\blegal\b/gi, "v√©ri g√∫di"],

    // Conectores e gram√°tica
    [/\bque\b/gi, "qui"],
    [/\b√©\b/gi, "√¢ndi"],
    [/\bmas\b/gi, "b√¢ti"],
    [/\bse\b/gi, "√≠fi"],
    [/\bou\b/gi, "ou"],
    [/\be\b/gi, "√¢ndi"],
    [/\bn√£o\b/gi, "n√≥ti"],
    [/\best√£o\b/gi, "est√°n"],
    [/\bdepois\b/gi, "√©fite"],
    [/\bisso\b/gi, "d√©ti"],

    // Preposi√ß√µes e determinantes
    [/\b(a|o|as|os)\b/gi, "di"],
    [/\bna|no\b/gi, "in di"],
    [/\bda|do\b/gi, "of"],
    [/\bde\b/gi, "frlom"],
    [/\bem\b/gi, "in di"],
    [/\bcom\b/gi, "u√≠f"],
    [/\b(para|pra|pro)\b/gi, "di"],
    [/\baqui\b/gi, "h√≠r"],
    [/\bali\b/gi, "d√©r"],
    [/\bfora\b/gi, "√°ut"],

    // Tempo e datas
    [/\bhoje\b/gi, "tchud√™"],
    [/\bontem\b/gi, "i√©ixterd√™"],
    [/\bcedo\b/gi, "v√©ri cedo"],

    // Extras e express√µes
    [/\bs√≥\b/gi, "only"],
    [/\buma(s{0,1})\b/gi, "√¥ni$1"],
    [/\bum\b/gi, "√¥ni"],
    [/\bmelhor(es)?\b/gi, 'b√©xti'],

    // Transforma√ß√µes fon√©ticas gerais
    [/\b(\w{3,}?)√£o\b/gi, "$1i√≥n"],
    [/\sto\s/gi, " tch√∫ "],
    [/\s√©\s/gi, " ix "]
]

export default function joelify(original, debug = false) {
    if (typeof original !== 'string') return undefined;

    let result = original;
    const placeholderMap = new Map();
    let tokenIndex = 0;

    // Fase 1: aplicar substitui√ß√µes e guardar em mapa
    for (let i = 0; i < regexps.length; i++) {
        const [regexp, sub] = regexps[i];
        result = result.replace(regexp, (match) => {
            const token = `__JOEL_TOKEN_${tokenIndex}__`;
            placeholderMap.set(token, sub);
            tokenIndex++;
            return token;
        });

        if (debug) console.log(result);
    }

    // Fase 2: substituir os tokens pelos valores reais
    for (const [token, value] of placeholderMap.entries()) {
        result = result.replaceAll(token, value);
    }

    return result;
}
